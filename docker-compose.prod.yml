version: '3.7'
services:
  plantit:
    image: computationalplantscience/plantit
    working_dir: /code/plantit
    depends_on:
      - beat
      - celery
      - postgres
    volumes:
      - .:/code
    environment:
      - VUE_APP_TITLE=${VUE_APP_TITLE}
      - MAPBOX_TOKEN=${MAPBOX_TOKEN}
      - MAPBOX_FEATURE_REFRESH_MINUTES=${MAPBOX_FEATURE_REFRESH_MINUTES}
      - CYVERSE_REDIRECT_URL=${CYVERSE_REDIRECT_URL}
      - CYVERSE_CLIENT_ID=${CYVERSE_CLIENT_ID}
      - CYVERSE_CLIENT_SECRET=${CYVERSE_CLIENT_SECRET}
      - CYVERSE_TOKEN_REFRESH_MINUTES=${CYVERSE_TOKEN_REFRESH_MINUTES}
      - CYVERSE_USERNAME=${CYVERSE_USERNAME}
      - CYVERSE_PASSWORD=${CYVERSE_PASSWORD}
      - NODE_ENV=${NODE_ENV}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_API_URL=${DJANGO_API_URL}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_SECURE_SSL_REDIRECT=${DJANGO_SECURE_SSL_REDIRECT}
      - DJANGO_SESSION_COOKIE_SECURE=${DJANGO_SESSION_COOKIE_SECURE}
      - DJANGO_CSRF_COOKIE_SECURE=${DJANGO_CSRF_COOKIE_SECURE}
      - CELERY_EVENTLET_QUEUE=${CELERY_EVENTLET_QUEUE}
      - USERS_CACHE=${USERS_CACHE}
      - USERS_REFRESH_MINUTES=${USERS_REFRESH_MINUTES}
      - USERS_STATS_REFRESH_MINUTES=${USERS_STATS_REFRESH_MINUTES}
      - STATS_WINDOW_WIDTH_DAYS=${STATS_WINDOW_WIDTH_DAYS}
      - WORKFLOWS_CACHE=${WORKFLOWS_CACHE}
      - WORKFLOWS_REFRESH_MINUTES=${WORKFLOWS_REFRESH_MINUTES}
      - AGENT_KEYS=${AGENT_KEYS}
      - MORE_USERS=${MORE_USERS}
      - TASKS_TIMEOUT_MULTIPLIER=${TASKS_TIMEOUT_MULTIPLIER}
      - TASKS_LOGS=${TASKS_LOGS}
      - TASKS_REFRESH_SECONDS=${TASKS_REFRESH_SECONDS}
      - TASKS_CLEANUP_MINUTES=${TASKS_CLEANUP_MINUTES}
      - TASKS_STEP_TIME_LIMIT_SECONDS=${TASKS_STEP_TIME_LIMIT_SECONDS}
      - TASKS_TEMPLATE_SCRIPT_SLURM=${TASKS_TEMPLATE_SCRIPT_SLURM}
      - LAUNCHER_SCRIPT_NAME=${LAUNCHER_SCRIPT_NAME}
      - INPUTS_FILE_NAME=${INPUTS_FILE_NAME}
      - ICOMMANDS_IMAGE=${ICOMMANDS_IMAGE}
      - CURL_IMAGE=${CURL_IMAGE}
      - SQL_ENGINE=${SQL_ENGINE}
      - SQL_HOST=${SQL_HOST}
      - SQL_PORT=${SQL_PORT}
      - SQL_NAME=${SQL_NAME}
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
      - GITHUB_AUTH_URI=${GITHUB_AUTH_URI}
      - GITHUB_REDIRECT_URI=${GITHUB_REDIRECT_URI}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_SECRET=${GITHUB_SECRET}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - DOCKER_USERNAME=${DOCKER_USERNAME}
      - DOCKER_PASSWORD=${DOCKER_PASSWORD}
      - NO_PREVIEW_THUMBNAIL=${NO_PREVIEW_THUMBNAIL}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_FEEDBACK_ARN=${AWS_FEEDBACK_ARN}
      - TUTORIALS_FILE=${TUTORIALS_FILE}
      - FEEDBACK_FILE=${FEEDBACK_FILE}
      - AGENTS_HEALTHCHECKS_MINUTES=${AGENTS_HEALTHCHECKS_MINUTES}
      - AGENTS_HEALTHCHECKS_SAVED=${AGENTS_HEALTHCHECKS_SAVED}
      - HTTP_TIMEOUT=${HTTP_TIMEOUT}
      - DIRT_MIGRATION_STAGING_DIR=${DIRT_MIGRATION_STAGING_DIR}
      - DIRT_MIGRATION_DATA_DIR=${DIRT_MIGRATION_DATA_DIR}
      - DIRT_MIGRATION_HOST=${DIRT_MIGRATION_HOST}
      - DIRT_MIGRATION_PORT=${DIRT_MIGRATION_PORT}
      - DIRT_MIGRATION_USERNAME=${DIRT_MIGRATION_USERNAME}
      - DIRT_MIGRATION_DB_HOST=${DIRT_MIGRATION_DB_HOST}
      - DIRT_MIGRATION_DB_PORT=${DIRT_MIGRATION_DB_PORT}
      - DIRT_MIGRATION_DB_USER=${DIRT_MIGRATION_DB_USER}
      - DIRT_MIGRATION_DB_DATABASE=${DIRT_MIGRATION_DB_DATABASE}
      - DIRT_MIGRATION_DB_PASSWORD=${DIRT_MIGRATION_DB_PASSWORD}
    command: ["/code/scripts/wait-for-postgres.sh", "${SQL_HOST}", "${SQL_USER}",
              "daphne",
              "-b", "0.0.0.0",
              "-p", "8000",
              "plantit.asgi:application"]
    networks:
      - ngnix_network
      - default
    restart: always
    healthcheck:
      test: curl -f http://localhost:8000/ping/
      interval: 20s
      timeout: 20s
      retries: 2
      start_period: 20s
  beat:
    image: computationalplantscience/plantit
    command: ["/code/scripts/wait-for-postgres.sh", "${SQL_HOST}", "${SQL_USER}",
              "celery",
              "-A", "plantit",
              "beat",
              "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler",
              "--loglevel", "INFO"]
    volumes:
      - .:/code
    working_dir: /code/plantit
    depends_on:
      - postgres
      - redis
    environment:
      - MAPBOX_TOKEN=${MAPBOX_TOKEN}
      - MAPBOX_FEATURE_REFRESH_MINUTES=${MAPBOX_FEATURE_REFRESH_MINUTES}
      - CYVERSE_REDIRECT_URL=${CYVERSE_REDIRECT_URL}
      - CYVERSE_CLIENT_ID=${CYVERSE_CLIENT_ID}
      - CYVERSE_CLIENT_SECRET=${CYVERSE_CLIENT_SECRET}
      - CYVERSE_TOKEN_REFRESH_MINUTES=${CYVERSE_TOKEN_REFRESH_MINUTES}
      - CYVERSE_USERNAME=${CYVERSE_USERNAME}
      - CYVERSE_PASSWORD=${CYVERSE_PASSWORD}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_API_URL=${DJANGO_API_URL}
      - DJANGO_ALLOWED_HOSTS=*
      - DJANGO_SECURE_SSL_REDIRECT=${DJANGO_SECURE_SSL_REDIRECT}
      - DJANGO_SESSION_COOKIE_SECURE=${DJANGO_SESSION_COOKIE_SECURE}
      - DJANGO_CSRF_COOKIE_SECURE=${DJANGO_CSRF_COOKIE_SECURE}
      - CELERY_EVENTLET_QUEUE=${CELERY_EVENTLET_QUEUE}
      - USERS_CACHE=${USERS_CACHE}
      - USERS_REFRESH_MINUTES=${USERS_REFRESH_MINUTES}
      - USERS_STATS_REFRESH_MINUTES=${USERS_STATS_REFRESH_MINUTES}
      - STATS_WINDOW_WIDTH_DAYS=${STATS_WINDOW_WIDTH_DAYS}
      - WORKFLOWS_CACHE=${WORKFLOWS_CACHE}
      - WORKFLOWS_REFRESH_MINUTES=${WORKFLOWS_REFRESH_MINUTES}
      - AGENT_KEYS=${AGENT_KEYS}
      - MORE_USERS=${MORE_USERS}
      - TASKS_TIMEOUT_MULTIPLIER=${TASKS_TIMEOUT_MULTIPLIER}
      - TASKS_LOGS=${TASKS_LOGS}
      - TASKS_REFRESH_SECONDS=${TASKS_REFRESH_SECONDS}
      - TASKS_CLEANUP_MINUTES=${TASKS_CLEANUP_MINUTES}
      - TASKS_STEP_TIME_LIMIT_SECONDS=${TASKS_STEP_TIME_LIMIT_SECONDS}
      - TASKS_TEMPLATE_SCRIPT_SLURM=${TASKS_TEMPLATE_SCRIPT_SLURM}
      - LAUNCHER_SCRIPT_NAME=${LAUNCHER_SCRIPT_NAME}
      - INPUTS_FILE_NAME=${INPUTS_FILE_NAME}
      - ICOMMANDS_IMAGE=${ICOMMANDS_IMAGE}
      - CURL_IMAGE=${CURL_IMAGE}
      - SQL_ENGINE=${SQL_ENGINE}
      - SQL_HOST=${SQL_HOST}
      - SQL_PORT=${SQL_PORT}
      - SQL_NAME=${SQL_NAME}
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
      - GITHUB_AUTH_URI=${GITHUB_AUTH_URI}
      - GITHUB_REDIRECT_URI=${GITHUB_REDIRECT_URI}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_SECRET=${GITHUB_SECRET}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - DOCKER_USERNAME=${DOCKER_USERNAME}
      - DOCKER_PASSWORD=${DOCKER_PASSWORD}
      - NO_PREVIEW_THUMBNAIL=${NO_PREVIEW_THUMBNAIL}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_FEEDBACK_ARN=${AWS_FEEDBACK_ARN}
      - TUTORIALS_FILE=${TUTORIALS_FILE}
      - FEEDBACK_FILE=${FEEDBACK_FILE}
      - AGENTS_HEALTHCHECKS_MINUTES=${AGENTS_HEALTHCHECKS_MINUTES}
      - AGENTS_HEALTHCHECKS_SAVED=${AGENTS_HEALTHCHECKS_SAVED}
      - HTTP_TIMEOUT=${HTTP_TIMEOUT}
      - DIRT_MIGRATION_STAGING_DIR=${DIRT_MIGRATION_STAGING_DIR}
      - DIRT_MIGRATION_DATA_DIR=${DIRT_MIGRATION_DATA_DIR}
      - DIRT_MIGRATION_HOST=${DIRT_MIGRATION_HOST}
      - DIRT_MIGRATION_PORT=${DIRT_MIGRATION_PORT}
      - DIRT_MIGRATION_USERNAME=${DIRT_MIGRATION_USERNAME}
      - DIRT_MIGRATION_DB_HOST=${DIRT_MIGRATION_DB_HOST}
      - DIRT_MIGRATION_DB_PORT=${DIRT_MIGRATION_DB_PORT}
      - DIRT_MIGRATION_DB_USER=${DIRT_MIGRATION_DB_USER}
      - DIRT_MIGRATION_DB_DATABASE=${DIRT_MIGRATION_DB_DATABASE}
      - DIRT_MIGRATION_DB_PASSWORD=${DIRT_MIGRATION_DB_PASSWORD}
    healthcheck:
      test: celery -A plantit status | grep "OK"
      interval: 60s
      timeout: 60s
      retries: 2
      start_period: 20s
    restart: always
  # Celery prefork worker for standard (compute-bound) tasks
  celery:
    image: computationalplantscience/plantit
    command: ["/code/scripts/wait-for-postgres.sh", "${SQL_HOST}", "${SQL_USER}",
              "celery",
              "-A", "plantit",
              "worker",
              "-n", "celery",
              "-c", "2",
              "--loglevel", "INFO"]
    volumes:
      - .:/code
      - ${DIRT_MIGRATION_STAGING_DIR}:${DIRT_MIGRATION_STAGING_DIR}
    working_dir: /code/plantit
    depends_on:
      - postgres
      - redis
    environment:
      - MAPBOX_TOKEN=${MAPBOX_TOKEN}
      - MAPBOX_FEATURE_REFRESH_MINUTES=${MAPBOX_FEATURE_REFRESH_MINUTES}
      - CYVERSE_REDIRECT_URL=${CYVERSE_REDIRECT_URL}
      - CYVERSE_CLIENT_ID=${CYVERSE_CLIENT_ID}
      - CYVERSE_CLIENT_SECRET=${CYVERSE_CLIENT_SECRET}
      - CYVERSE_TOKEN_REFRESH_MINUTES=${CYVERSE_TOKEN_REFRESH_MINUTES}
      - CYVERSE_USERNAME=${CYVERSE_USERNAME}
      - CYVERSE_PASSWORD=${CYVERSE_PASSWORD}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_API_URL=${DJANGO_API_URL}
      - DJANGO_ALLOWED_HOSTS=*
      - DJANGO_SECURE_SSL_REDIRECT=${DJANGO_SECURE_SSL_REDIRECT}
      - DJANGO_SESSION_COOKIE_SECURE=${DJANGO_SESSION_COOKIE_SECURE}
      - DJANGO_CSRF_COOKIE_SECURE=${DJANGO_CSRF_COOKIE_SECURE}
      - CELERY_EVENTLET_QUEUE=${CELERY_EVENTLET_QUEUE}
      - USERS_CACHE=${USERS_CACHE}
      - USERS_REFRESH_MINUTES=${USERS_REFRESH_MINUTES}
      - USERS_STATS_REFRESH_MINUTES=${USERS_STATS_REFRESH_MINUTES}
      - STATS_WINDOW_WIDTH_DAYS=${STATS_WINDOW_WIDTH_DAYS}
      - WORKFLOWS_CACHE=${WORKFLOWS_CACHE}
      - WORKFLOWS_REFRESH_MINUTES=${WORKFLOWS_REFRESH_MINUTES}
      - AGENT_KEYS=${AGENT_KEYS}
      - MORE_USERS=${MORE_USERS}
      - TASKS_TIMEOUT_MULTIPLIER=${TASKS_TIMEOUT_MULTIPLIER}
      - TASKS_LOGS=${TASKS_LOGS}
      - TASKS_REFRESH_SECONDS=${TASKS_REFRESH_SECONDS}
      - TASKS_CLEANUP_MINUTES=${TASKS_CLEANUP_MINUTES}
      - TASKS_STEP_TIME_LIMIT_SECONDS=${TASKS_STEP_TIME_LIMIT_SECONDS}
      - TASKS_TEMPLATE_SCRIPT_SLURM=${TASKS_TEMPLATE_SCRIPT_SLURM}
      - LAUNCHER_SCRIPT_NAME=${LAUNCHER_SCRIPT_NAME}
      - INPUTS_FILE_NAME=${INPUTS_FILE_NAME}
      - ICOMMANDS_IMAGE=${ICOMMANDS_IMAGE}
      - CURL_IMAGE=${CURL_IMAGE}
      - SQL_ENGINE=${SQL_ENGINE}
      - SQL_HOST=${SQL_HOST}
      - SQL_PORT=${SQL_PORT}
      - SQL_NAME=${SQL_NAME}
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
      - GITHUB_AUTH_URI=${GITHUB_AUTH_URI}
      - GITHUB_REDIRECT_URI=${GITHUB_REDIRECT_URI}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_SECRET=${GITHUB_SECRET}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - DOCKER_USERNAME=${DOCKER_USERNAME}
      - DOCKER_PASSWORD=${DOCKER_PASSWORD}
      - NO_PREVIEW_THUMBNAIL=${NO_PREVIEW_THUMBNAIL}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_FEEDBACK_ARN=${AWS_FEEDBACK_ARN}
      - TUTORIALS_FILE=${TUTORIALS_FILE}
      - FEEDBACK_FILE=${FEEDBACK_FILE}
      - AGENTS_HEALTHCHECKS_MINUTES=${AGENTS_HEALTHCHECKS_MINUTES}
      - AGENTS_HEALTHCHECKS_SAVED=${AGENTS_HEALTHCHECKS_SAVED}
      - HTTP_TIMEOUT=${HTTP_TIMEOUT}
      - DIRT_MIGRATION_STAGING_DIR=${DIRT_MIGRATION_STAGING_DIR}
      - DIRT_MIGRATION_DATA_DIR=${DIRT_MIGRATION_DATA_DIR}
      - DIRT_MIGRATION_HOST=${DIRT_MIGRATION_HOST}
      - DIRT_MIGRATION_PORT=${DIRT_MIGRATION_PORT}
      - DIRT_MIGRATION_USERNAME=${DIRT_MIGRATION_USERNAME}
      - DIRT_MIGRATION_DB_HOST=${DIRT_MIGRATION_DB_HOST}
      - DIRT_MIGRATION_DB_PORT=${DIRT_MIGRATION_DB_PORT}
      - DIRT_MIGRATION_DB_USER=${DIRT_MIGRATION_DB_USER}
      - DIRT_MIGRATION_DB_DATABASE=${DIRT_MIGRATION_DB_DATABASE}
      - DIRT_MIGRATION_DB_PASSWORD=${DIRT_MIGRATION_DB_PASSWORD}
    healthcheck:
      test: celery -A plantit status | grep "OK"
      interval: 60s
      timeout: 60s
      retries: 2
      start_period: 20s
    restart: always
  # Celery worker with Eventlet pool for IO-bound tasks (https://docs.celeryq.dev/en/latest/userguide/concurrency/eventlet.html)
  celerye:
    image: computationalplantscience/plantit
    command: [ "/code/scripts/wait-for-postgres.sh", "${SQL_HOST}", "${SQL_USER}",
               "celery",
               "-A", "plantit",
               "worker",
               "-n", "celerye",
               "-P", "eventlet",
               "-Q", "${CELERY_EVENTLET_QUEUE}",
               "-c", "500",
               "--loglevel", "INFO" ]
    volumes:
      - .:/code
      - ${DIRT_MIGRATION_STAGING_DIR}:${DIRT_MIGRATION_STAGING_DIR}
    working_dir: /code/plantit
    depends_on:
      - postgres
      - redis
    environment:
      - MAPBOX_TOKEN=${MAPBOX_TOKEN}
      - MAPBOX_FEATURE_REFRESH_MINUTES=${MAPBOX_FEATURE_REFRESH_MINUTES}
      - CYVERSE_REDIRECT_URL=${CYVERSE_REDIRECT_URL}
      - CYVERSE_CLIENT_ID=${CYVERSE_CLIENT_ID}
      - CYVERSE_CLIENT_SECRET=${CYVERSE_CLIENT_SECRET}
      - CYVERSE_TOKEN_REFRESH_MINUTES=${CYVERSE_TOKEN_REFRESH_MINUTES}
      - CYVERSE_USERNAME=${CYVERSE_USERNAME}
      - CYVERSE_PASSWORD=${CYVERSE_PASSWORD}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_API_URL=${DJANGO_API_URL}
      - DJANGO_ALLOWED_HOSTS=*
      - DJANGO_SECURE_SSL_REDIRECT=${DJANGO_SECURE_SSL_REDIRECT}
      - DJANGO_SESSION_COOKIE_SECURE=${DJANGO_SESSION_COOKIE_SECURE}
      - DJANGO_CSRF_COOKIE_SECURE=${DJANGO_CSRF_COOKIE_SECURE}
      - CELERY_EVENTLET_QUEUE=${CELERY_EVENTLET_QUEUE}
      - USERS_CACHE=${USERS_CACHE}
      - USERS_REFRESH_MINUTES=${USERS_REFRESH_MINUTES}
      - USERS_STATS_REFRESH_MINUTES=${USERS_STATS_REFRESH_MINUTES}
      - STATS_WINDOW_WIDTH_DAYS=${STATS_WINDOW_WIDTH_DAYS}
      - WORKFLOWS_CACHE=${WORKFLOWS_CACHE}
      - WORKFLOWS_REFRESH_MINUTES=${WORKFLOWS_REFRESH_MINUTES}
      - AGENT_KEYS=${AGENT_KEYS}
      - MORE_USERS=${MORE_USERS}
      - TASKS_TIMEOUT_MULTIPLIER=${TASKS_TIMEOUT_MULTIPLIER}
      - TASKS_LOGS=${TASKS_LOGS}
      - TASKS_REFRESH_SECONDS=${TASKS_REFRESH_SECONDS}
      - TASKS_CLEANUP_MINUTES=${TASKS_CLEANUP_MINUTES}
      - TASKS_STEP_TIME_LIMIT_SECONDS=${TASKS_STEP_TIME_LIMIT_SECONDS}
      - TASKS_TEMPLATE_SCRIPT_SLURM=${TASKS_TEMPLATE_SCRIPT_SLURM}
      - LAUNCHER_SCRIPT_NAME=${LAUNCHER_SCRIPT_NAME}
      - INPUTS_FILE_NAME=${INPUTS_FILE_NAME}
      - ICOMMANDS_IMAGE=${ICOMMANDS_IMAGE}
      - CURL_IMAGE=${CURL_IMAGE}
      - SQL_ENGINE=${SQL_ENGINE}
      - SQL_HOST=${SQL_HOST}
      - SQL_PORT=${SQL_PORT}
      - SQL_NAME=${SQL_NAME}
      - SQL_USER=${SQL_USER}
      - SQL_PASSWORD=${SQL_PASSWORD}
      - GITHUB_AUTH_URI=${GITHUB_AUTH_URI}
      - GITHUB_REDIRECT_URI=${GITHUB_REDIRECT_URI}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_SECRET=${GITHUB_SECRET}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - DOCKER_USERNAME=${DOCKER_USERNAME}
      - DOCKER_PASSWORD=${DOCKER_PASSWORD}
      - NO_PREVIEW_THUMBNAIL=${NO_PREVIEW_THUMBNAIL}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_FEEDBACK_ARN=${AWS_FEEDBACK_ARN}
      - TUTORIALS_FILE=${TUTORIALS_FILE}
      - FEEDBACK_FILE=${FEEDBACK_FILE}
      - AGENTS_HEALTHCHECKS_MINUTES=${AGENTS_HEALTHCHECKS_MINUTES}
      - AGENTS_HEALTHCHECKS_SAVED=${AGENTS_HEALTHCHECKS_SAVED}
      - HTTP_TIMEOUT=${HTTP_TIMEOUT}
      - DIRT_MIGRATION_STAGING_DIR=${DIRT_MIGRATION_STAGING_DIR}
      - DIRT_MIGRATION_DATA_DIR=${DIRT_MIGRATION_DATA_DIR}
      - DIRT_MIGRATION_HOST=${DIRT_MIGRATION_HOST}
      - DIRT_MIGRATION_PORT=${DIRT_MIGRATION_PORT}
      - DIRT_MIGRATION_USERNAME=${DIRT_MIGRATION_USERNAME}
      - DIRT_MIGRATION_DB_HOST=${DIRT_MIGRATION_DB_HOST}
      - DIRT_MIGRATION_DB_PORT=${DIRT_MIGRATION_DB_PORT}
      - DIRT_MIGRATION_DB_USER=${DIRT_MIGRATION_DB_USER}
      - DIRT_MIGRATION_DB_DATABASE=${DIRT_MIGRATION_DB_DATABASE}
      - DIRT_MIGRATION_DB_PASSWORD=${DIRT_MIGRATION_DB_PASSWORD}
    healthcheck:
      test: celery -A plantit status | grep "OK"
      interval: 60s
      timeout: 60s
      retries: 2
      start_period: 20s
    restart: always
  redis:
    image: redis:6
    volumes:
      - redisdata:/data
    restart: always
    command: ["redis-server"]
  nginx:
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/ssl/:/opt/plantit/config/ssl/
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ./config/certbot/conf:/etc/letsencrypt/
      - ./config/certbot/www:/var/www/certbot
      - ./plantit/static/:/opt/plantit/static/:ro
      - ./plantit/files/public/:/opt/plantit/public/:ro
    depends_on:
      - plantit
    networks:
      - ngnix_network
    restart: always
  certbot:
    image: certbot/certbot
    volumes:
      - ./config/certbot/conf:/etc/letsencrypt/
      - ./config/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 24h & wait $${!}; done;'"
  postgres:
    image: postgres:12
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${SQL_PORT}
      - POSTGRES_NAME=${SQL_NAME}
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=${SQL_DB}
    healthcheck:
      test: /usr/bin/pg_isready -U "postgres"
      interval: 60s
      timeout: 60s
      retries: 2
    volumes:
      - pgdata:/var/lib/postgresql/data
networks:
  ngnix_network:
    driver: bridge
volumes:
  pgdata:
  redisdata:
